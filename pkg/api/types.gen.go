// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.1-0.20240601101045-cb61b77eea50 DO NOT EDIT.
package api

// Defines values for TokenRequestSchemaGrantType.
const (
	AuthorizationCode TokenRequestSchemaGrantType = "authorization_code"
	RefreshToken      TokenRequestSchemaGrantType = "refresh_token"
)

// Defines values for AuthorizeParamsResponseType.
const (
	Code AuthorizeParamsResponseType = "code"
)

// Defines values for AuthorizeParamsScope.
const (
	Openid AuthorizeParamsScope = "openid"
)

// CertsResponseSchema defines model for CertsResponseSchema.
type CertsResponseSchema struct {
	Keys *[]JWKSet `json:"keys,omitempty"`
}

// JWKSet defines model for JWKSet.
type JWKSet struct {
	Alg string `json:"alg"`
	E   string `json:"e"`
	Kid string `json:"kid"`
	Kty string `json:"kty"`
	N   string `json:"n"`
	Use string `json:"use"`
}

// OpenIDConfigurationResponseSchema defines model for OpenIDConfigurationResponseSchema.
type OpenIDConfigurationResponseSchema struct {
	// AuthorizationEndpoint http://localhost:8787/authorize
	AuthorizationEndpoint string `json:"authorization_endpoint"`

	// Issuer http://localhost:8787
	Issuer string `json:"issuer"`

	// JwksUri http://localhost:8787/certs
	JwksUri string `json:"jwks_uri"`

	// RevocationEndpoint http://localhost:8787/revoke
	RevocationEndpoint string `json:"revocation_endpoint"`

	// TokenEndpoint http://localhost:8787/token
	TokenEndpoint string `json:"token_endpoint"`

	// UserinfoEndpoint http://localhost:8787/userinfo
	UserinfoEndpoint string `json:"userinfo_endpoint"`
}

// TokenRequestSchema defines model for TokenRequestSchema.
type TokenRequestSchema struct {
	// ClientId client_id
	ClientId *string `json:"client_id,omitempty"`

	// ClientSecret client_secret
	ClientSecret *string `json:"client_secret,omitempty"`

	// Code code
	Code string `json:"code"`

	// CodeVerifier code_verifier
	CodeVerifier *string `json:"code_verifier,omitempty"`

	// GrantType grant_type
	GrantType TokenRequestSchemaGrantType `json:"grant_type"`

	// RedirectUri http://localhost:8080/rp/callback
	RedirectUri string `json:"redirect_uri"`

	// RefreshToken refresh_token
	RefreshToken *string `json:"refresh_token,omitempty"`
	Scope        *string `json:"scope,omitempty"`
}

// TokenRequestSchemaGrantType grant_type
type TokenRequestSchemaGrantType string

// TokenResponseSchema https://openid-foundation-japan.github.io/openid-connect-core-1_0.ja.html#TokenResponse
type TokenResponseSchema struct {
	// AccessToken access_token
	AccessToken string `json:"access_token"`

	// ExpiresIn expires_in
	ExpiresIn int `json:"expires_in"`

	// IdToken id_token
	IdToken string `json:"id_token"`

	// RefreshToken refresh_token
	RefreshToken string `json:"refresh_token"`

	// TokenType token_type
	TokenType string `json:"token_type"`
}

// AuthorizeParams defines parameters for Authorize.
type AuthorizeParams struct {
	// ResponseType response_type
	ResponseType AuthorizeParamsResponseType `form:"response_type" json:"response_type"`

	// ClientId client_id
	ClientId string `form:"client_id" json:"client_id"`

	// RedirectUri http://localhost:8080/callback
	RedirectUri *string `form:"redirect_uri,omitempty" json:"redirect_uri,omitempty"`

	// Scope openid
	Scope *AuthorizeParamsScope `form:"scope,omitempty" json:"scope,omitempty"`

	// State state
	State *string `form:"state,omitempty" json:"state,omitempty"`
}

// AuthorizeParamsResponseType defines parameters for Authorize.
type AuthorizeParamsResponseType string

// AuthorizeParamsScope defines parameters for Authorize.
type AuthorizeParamsScope string

// CallbackParams defines parameters for Callback.
type CallbackParams struct {
	// Id id
	Id string `form:"id" json:"id"`
}

// LoginViewParams defines parameters for LoginView.
type LoginViewParams struct {
	// Id id
	Id string `form:"id" json:"id"`
}

// LoginFormdataBody defines parameters for Login.
type LoginFormdataBody struct {
	Email    *string `form:"email,omitempty" json:"email,omitempty"`
	Password *string `form:"password,omitempty" json:"password,omitempty"`
}

// LoginFormdataRequestBody defines body for Login for application/x-www-form-urlencoded ContentType.
type LoginFormdataRequestBody LoginFormdataBody

// TokenFormdataRequestBody defines body for Token for application/x-www-form-urlencoded ContentType.
type TokenFormdataRequestBody = TokenRequestSchema
